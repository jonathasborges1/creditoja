{"version":3,"sources":["config/routes.ts","pages/about/index.tsx","pages/contact/index.tsx","assets/creditoja-logotipo.jpg","components/textFieldPhone/index.tsx","components/textFieldCurrency/index.tsx","components/textFieldCustom/index.tsx","config/appConfig.ts","components/formik/index.tsx","utils/index.ts","pages/home/index.tsx","pages/services/index.tsx","components/routes/index.tsx","theme/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ROUTES","HOME","ABOUT","CONTACT","SERVICES","About","_ref","children","_objectWithoutProperties","_excluded","_jsx","_Fragment","Contact","TextFieldPhone","props","classes","useStyles","formik","useFormikContext","TextField","type","name","label","value","phone","phones","length","concat","slice","formatPhone","onChange","event","valueClean","target","replaceAll","setFieldValue","onBlur","error","helperText","inputProps","maxLength","InputLabelProps","root","InputLabelRoot","InputProps","InputRoot","notchedOutline","hasErrorFieldSet","FormHelperTextProps","className","variant","required","makeStyles","theme","fontWeight","color","border","palette","secondary","light","main","TextFieldCurrency","numberValue","Number","replace","Intl","NumberFormat","style","currency","format","formatMoney","TextFieldCustom","dotenv","config","appConfig","site","url","api","key","process","user","email","admin","console","log","FormikSendEmail","enqueueSnackbar","useSnackbar","validationSchema","yup","shape","min","max","matches","emailBody","valuesFormik","str","valued","tag","Formik","initialValues","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","actions","payloadValuesFormik","params","header","response","wrap","_context","prev","next","sender","to","cc","subject","htmlContent","headers","Accept","axios","post","sent","data","setTimeout","window","location","href","t0","resetForm","stop","_x","_x2","apply","arguments","formikprops","_jsxs","Form","display","flexDirection","gap","handleChange","handleBlur","touched","errors","Boolean","Button","sx","background","padding","width","fontSize","backgroundColor","Home","Grid","container","justifyContent","item","xs","lg","Box","height","src","logotipo","alt","alignItems","List","component","ListItemButton","p","mr","pl","paddingRight","borderRadius","TouchApp","touchApp","marginRight","textAlign","margin","Typography","marginTop","animation","transform","boxShadow","Services","Routes","Object","assign","_objectDestructuringEmpty","BrowserRouter","Switch","Route","exact","path","Theme","createTheme","spacing","typography","fontFamily","join","subtitle1","primary","contrastText","success","text","disabled","textColor","default","selected","paper","backgroundCustom","App","notistackRef","React","useRef","onClickDismiss","current","closeSnackbar","ThemeProvider","ThemeProviderLegacy","SnackbarProvider","autoHideDuration","maxSnack","preventDuplicate","ref","action","IconButton","size","onClick","CloseIcon","htmlColor","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.26bc2cb5.chunk.js","sourcesContent":["const ROUTES = {\n    HOME: \"/\",\n    ABOUT: \"/about/\",\n    CONTACT: \"/contact/\",\n    SERVICES: \"/services/\",\n}\n\nexport default ROUTES;","import React from 'react';\n\ninterface Props {\n    children?: React.ReactNode;\n}\n\nconst About: React.FC<Props> = ({ children, ...props }) => {\n    return (\n        <>\n            <h1>Este bloco representa o componente About</h1>\n        </>\n    )\n}\n\nexport default About","import React from 'react';\n\ninterface Props {\n    children?: React.ReactNode;\n}\n\nconst Contact: React.FC<Props> = ({ children, ...props }) => {\n    return (\n        <>\n            <h1>Este bloco representa o componente Contact</h1>\n        </>\n    )\n}\n\nexport default Contact;","export default __webpack_public_path__ + \"static/media/creditoja-logotipo.0c60bafb.jpg\";","import React from 'react';\nimport { useFormikContext } from 'formik';\n\nimport { StandardTextFieldProps, TextField, Theme } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\n\ninterface Props extends StandardTextFieldProps  {\n   children?: React.ReactNode;\n   type?: string;\n   name: string;\n   label: string;\n   value: string;\n   onChange: (e) => void;\n   onBlur: (e) => void;\n}\n\nconst TextFieldPhone: React.FC<Props> = ({ children, ...props }) => {\n   const classes = useStyles(props);\n   const formik = useFormikContext();\n\n   const handlePhoneChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = event.target;\n      const valueClean = value.replaceAll(/[\\s()a-z+-]|(55)/g,'');\n      formik.setFieldValue(props.name,valueClean);\n   }\n\n   const formatPhone = (phone: string): string => {\n      const phones: number = phone.length; \n      switch (true) {\n         case phones === 0: {\n            return '';\n         }\n         case phones >= 1 && phones <= 2: { // +55 (92\n            return `+${55} (${phone.slice(0,2)}`; \n         }\n         case phones >= 3 && phones <= 7: { // +55 (92) 9 8841\n            return `+${55} (${phone.slice(0,2)}) ${phone.slice(2,7)}`; \n         }\n         case phones >= 8 && phones <= 13: { // +55 (92) 98841-0440\n            return `+${55} (${phone.slice(0,2)}) ${phone.slice(2,7)}-${phone.slice(7)}`; \n         }\n         default:\n            return '';\n      }\n    }\n\n   return (\n      <TextField\n         type={props.type}\n         name={props.name}\n         label={props.label}\n         value={formatPhone(props.value)}\n         onChange={handlePhoneChange}\n         onBlur={props.onBlur}\n         error={props.error} // define a propriedade error como true quando ocorrer um erro\n         helperText={ props.value.length > 0 ? props.helperText: \"\"}\n         inputProps={{\n            maxLength: 19, // Delimita a quantidade maxima de caracteres no campo\n         }}\n         InputLabelProps={{\n            classes: {\n               root: classes.InputLabelRoot,\n            }\n         }}\n         InputProps={{\n            classes: {\n               root: classes.InputRoot,\n               notchedOutline: props.error ? `${classes.hasErrorFieldSet}` : ``,\n             },\n         }}\n         FormHelperTextProps={{\n            className: classes.helperText,\n         }}\n         variant={\"outlined\"}\n         required={props.required}\n      />\n   )\n}\n\nexport default TextFieldPhone;\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n   InputLabelRoot : {\n      \"&.MuiInputLabel-root.Mui-focused\" : { //  Controla cor da label no momento da digitacao\n         fontWeight: 700,\n         color: \"#000\",\n      },\n   },\n   InputRoot: {\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n           border: `1px solid ${theme.palette.secondary.light} !important`, // Controla cor da borda durante Digitacao \"#FFB800\"\n      },\n   },\n   hasErrorFieldSet: {\n      \"& .MuiOutlinedInput-notchedOutline\": {\n        border: `1px solid ${theme.palette.error.main}`, // Sinalizacao de campo incorreto -> \"#F97A91\"\n      },\n    },\n    helperText: {\n      \"&.MuiFormHelperText-root\" : {\n         color: \"red\", // altere para do texto de apoio\n      }\n    },\n }));\n","import { StandardTextFieldProps, TextField, Theme } from '@mui/material';\nimport { useFormikContext } from 'formik';\nimport React from 'react';\nimport makeStyles from '@mui/styles/makeStyles';\n\ninterface Props extends StandardTextFieldProps{\n   children?: React.ReactNode;\n   type: string;\n   name: string;\n   label: string;\n   value: string;\n   onChange?: (e) => void;\n   onBlur: (e) => void;\n}\n\nconst TextFieldCurrency: React.FC<Props> = ({ children, ...props }) => {\n   const classes = useStyles(props);\n   const formik = useFormikContext();\n\n   const formatMoney = (value: string) => {\n      const numberValue = Number(value.replace(/[^\\d]/g, \"\")) / 100;\n      return new Intl.NumberFormat(\"pt-BR\", {\n        style: \"currency\",\n        currency: \"BRL\",\n      }).format(numberValue);\n    };\n  \n    const handleMoneyChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = event.target;\n      formik.setFieldValue(props.name, formatMoney(value));\n    };\n\n   return (\n      <TextField\n         type={props.type}\n         name={props.name}\n         label={props.label}\n         value={props.value}\n         onChange={handleMoneyChange}\n         onBlur={props.onBlur}\n         error={props.error} // define a propriedade error como true quando ocorrer um erro\n         helperText={ props.value.length > 0 ? props.helperText: \"\"}\n         InputLabelProps={{\n            classes: {\n               root: classes.InputLabelRoot,\n            }\n         }}\n         InputProps={{\n            classes: {\n               root: classes.InputRoot,\n               notchedOutline: props.error ? `${classes.hasErrorFieldSet}` : ``,\n             },\n         }}\n         FormHelperTextProps={{\n            className: classes.helperText,\n         }}\n         variant={\"outlined\"}\n         required={props.required}\n      />\n   )\n}\n\nexport default TextFieldCurrency;\n\nconst useStyles = makeStyles((theme: Theme) => ({\n   InputLabelRoot : {\n      \"&.MuiInputLabel-root.Mui-focused\" : { //  Controla cor da label no momento da digitacao\n         fontWeight: 700,\n         color: \"#000\",\n      },\n   },\n   InputRoot: {\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n           border: `1px solid ${theme.palette.secondary.light} !important`, // Controla cor da borda durante Digitacao \"#FFB800\"\n      },\n   },\n   hasErrorFieldSet: {\n      \"& .MuiOutlinedInput-notchedOutline\": {\n        border: `1px solid ${theme.palette.error.main}`, // Sinalizacao de campo incorreto -> \"#F97A91\"\n      },\n    },\n    helperText: {\n      \"&.MuiFormHelperText-root\" : {\n         color: \"red\", // altere para do texto de apoio\n      }\n    },\n }));","import { StandardTextFieldProps, TextField, Theme } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport React from 'react';\n\ninterface Props extends StandardTextFieldProps {\n   children?: React.ReactNode;\n   type?: string;\n   name: string;\n   label: string;\n   value: string;\n   onChange: (e) => void;\n   onBlur: (e) => void;\n}\n\nconst TextFieldCustom: React.FC<Props> = ({ children, ...props }) => {\n   const classes = useStyles(props);\n   return (\n      <TextField\n      type={props.type}\n      name={props.name}\n      label={props.label}\n      value={props.value}\n      onChange={props.onChange}\n      onBlur={props.onBlur}\n      error={props.error} // define a propriedade error como true quando ocorrer um erro\n      helperText={ props.value.length > 0 ? props.helperText: \"\"}\n      InputLabelProps={{\n         classes: {\n            root: classes.InputLabelRoot,\n         }\n      }}\n      InputProps={{\n         classes: {\n            root: classes.InputRoot,\n            notchedOutline: props.error ? `${classes.hasErrorFieldSet}` : ``,\n          },\n      }}\n      FormHelperTextProps={{\n         className: classes.helperText,\n      }}\n      variant={\"outlined\"}\n      required={props.required}\n   />\n   )\n}\n\nexport default TextFieldCustom;\n\nconst useStyles = makeStyles((theme: Theme) => ({\n   InputLabelRoot : {\n      \"&.MuiInputLabel-root.Mui-focused\" : { //  Controla cor da label no momento da digitacao\n         fontWeight: 700,\n         color: \"#000\",\n      },\n   },\n   InputRoot: {\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n           border: `1px solid ${theme.palette.secondary.light} !important`, // Controla cor da borda durante Digitacao \"#FFB800\"\n      },\n   },\n   hasErrorFieldSet: {\n      \"& .MuiOutlinedInput-notchedOutline\": {\n        border: `1px solid ${theme.palette.error.main}`, // Sinalizacao de campo incorreto -> \"#F97A91\"\n      },\n    },\n    helperText: {\n      \"&.MuiFormHelperText-root\" : {\n         color: \"red\", // altere para do texto de apoio\n      }\n    },\n }));","import dotenv from 'dotenv';\ndotenv.config();\n\nconst appConfig =  {\n   site: {\n      url: \"https://creditoja.net/\",\n   },\n   api: {\n      url: \"https://api.sendinblue.com/v3/smtp/email\",\n      key: process.env.REACT_APP_API_KEY,\n   },\n   user: {\n      name: \"Jose Carlos\",\n      email: \"creditoja@creditoja.net\",\n   },\n   admin: {\n      email: \"jonathasborges0@gmail.com\",\n   }\n}\n\nexport default appConfig;\n\nconsole.log(\"App Running...\")\nconsole.log(\"[CRITICAL DEBUG]: \", process.env.REACT_APP_API_KEY)","import React from 'react';\nimport * as yup from \"yup\";\nimport axios from 'axios';\nimport { Form, Formik } from \"formik\";\nimport { useSnackbar } from \"notistack\";\n\nimport { Button } from '@mui/material';\n\nimport TextFieldPhone from '@components/textFieldPhone';\nimport TextFieldCurrency from '@components/textFieldCurrency';\nimport TextFieldCustom from '@components/textFieldCustom';\n\nimport { phoneNumberMask } from '@utils/index';\nimport appConfig from '@config/appConfig';\n\n\ninterface Props {\n   children?: React.ReactNode;\n}\n\ninterface InitialValuesFormik {\n   name: string;\n   email: string;\n   phone: string;\n   valued: string; // Valor Estimado\n   tag: string;\n}\n\nconst FormikSendEmail: React.FC<Props> = ({ children, ...props }) => {\n   const { enqueueSnackbar } = useSnackbar();\n\n   const initialValues: InitialValuesFormik = {\n      name: '',\n      email: '',\n      phone: '',\n      valued: '',\n      tag: \"#finanzero\",\n   }\n\n   const validationSchema = yup.object().shape({\n      email: yup\n        .string()\n        .email(\"Insira um e-mail válido\")\n        .required(\"Este campo é obrigatório\"),\n      name: yup\n        .string()\n        .min(2, \"Nome muito curto!\")\n        .max(50, \"Nome muito longo!\")\n        .required(\"Este campo é obrigatório\"),\n      phone: yup.string().matches(/\\(\\d{2}\\) \\d{4,5}\\-\\d{4}|^\\d{10,11}/g,\"Insira um telefone válido! - Exemplo: +55 (92) 9 8829-0290\").required(\"Este campo é obrigatório\"),\n    });\n\n    const emailBody = (valuesFormik: InitialValuesFormik | undefined): string => {\n      return `\n         <html>\n            <head></head>\n            <body>\n               <h1>Novo Cadastro Realizado pelo Site</h1>\n               <p>Informacoes de contato: </p>\n               <ul>\n                  <li>Nome: ${valuesFormik?.name}</li>\n                  <li>Email: ${valuesFormik?.email}</li>\n                  <li>Telefone: ${phoneNumberMask(valuesFormik?.phone)}</li>\n                  <li>Valor Estimado: ${valuesFormik?.valued}</li>\n                  <li>Tag: ${valuesFormik?.tag}</li>\n               </ul>\n            </body>\n         </html>\n      `;\n    }\n\n   return (\n      <Formik\n         initialValues={initialValues}\n         validationSchema={validationSchema}\n         onSubmit={async(values,actions) => {\n            const payloadValuesFormik = {\n               name: values.name,\n               email: values.email,\n               phone: values.phone,\n               valued: values.valued,\n               tag: values.tag,\n            }\n\n            try {\n               const params = {\n                  sender: {\n                     name: appConfig.user.name,\n                     email: appConfig.user.email, \n                  },\n                  to: [{\n                     name: appConfig.user.name,\n                     email: appConfig.user.email, \n                  }],\n                  cc: [{\n                     email: appConfig.admin.email,\n                  }],\n                  subject: \"Sistema de Notificação de Email CreditoJa - Lead Indicado pela Finanzero\",\n                  htmlContent: emailBody(payloadValuesFormik),\n               }\n\n               const header = {\n                  headers : {\n                     \"api-key\": appConfig.api.key,\n                     'Content-Type': 'application/json',\n                     Accept: 'application/json',\n                  }\n               }\n\n               const response = await axios.post(`https://api.sendinblue.com/v3/smtp/email`,params,header);\n               console.log(\"[INFO]: \", response.data);\n\n               enqueueSnackbar(\"Dados Enviados com sucesso!\", {\n                 variant: \"success\",\n               });\n\n               setTimeout( () => {\n                  window.location.href = \"https://creditoja.net/\";\n               },15000);\n\n            } catch (error) {\n               console.log(\"[DEBUG]: Erro ao enviar formulario -> \", error)\n               enqueueSnackbar(\"Ocorreu um erro ao Enviar Seus Dados\", {\n                  variant: \"error\",\n                });\n            }\n            \n            actions.resetForm(); // Limpa campos do formulario\n            \n         }}\n      >\n         {(formikprops) => {\n            return(\n               <Form style={{border: \"0px solid red\", display: \"flex\", flexDirection: \"column\", gap: 20  }}>\n                  <TextFieldCustom\n                     type={\"text\"}\n                     name={\"name\"}\n                     label={\"Nome Completo\"}\n                     value={formikprops.values.name}\n                     onChange={formikprops.handleChange}\n                     onBlur={formikprops.handleBlur}\n                     helperText={ formikprops.touched.name && formikprops.errors.name}\n                     error={\n                        formikprops.touched.name &&\n                        Boolean(formikprops.errors.name)\n                      }\n                     required\n                  />\n                  <TextFieldCustom\n                     type={\"emai\"}\n                     name={\"email\"}\n                     label={\"Email\"}\n                     value={formikprops.values.email}\n                     onChange={formikprops.handleChange}\n                     onBlur={formikprops.handleBlur}\n                     helperText={ formikprops.touched.email && formikprops.errors.email}\n                     error={\n                        formikprops.touched.email &&\n                        Boolean(formikprops.errors.email)\n                      }\n                     required\n                  />\n                  <TextFieldPhone\n                     type={\"text\"}\n                     name={\"phone\"}\n                     label={\"Telefone\"}\n                     value={formikprops.values.phone}\n                     onChange={formikprops.handleChange}\n                     onBlur={formikprops.handleBlur}\n                     helperText={ formikprops.touched.phone && formikprops.errors.phone}\n                     error={\n                        formikprops.touched.phone &&\n                        Boolean(formikprops.errors.phone)\n                      }\n                     required\n                  />\n                  <TextFieldCurrency\n                     type={\"text\"}\n                     name={\"valued\"}\n                     label={\"Valor Pretendido\"}\n                     value={formikprops.values.valued}\n                     onBlur={formikprops.handleBlur}\n                     helperText={ formikprops.touched.valued && formikprops.errors.valued}\n                     error={\n                        formikprops.touched.valued &&\n                        Boolean(formikprops.errors.valued)\n                      }\n                     required\n                  />\n                  <Button\n                     type={\"submit\"}\n                     variant={\"contained\"}\n                     sx={{\n                        background: \"#149dcc\", color: \"#fff\" ,padding: 1.4, width: \"20%\", fontSize: \"1rem\", \n                        \"&:hover\": {backgroundColor: '#90ee90', color: '#000'}\n                     }}\n                  >\n                     Enviar\n                  </Button>\n               </Form>\n            )\n            \n         }}\n      </Formik>\n   )\n}\n\nexport default FormikSendEmail;","export function phoneNumberMask (str?: string): string {\n   if(str){\n      if(str.length === 11){ \n         // 92 9 8841-0440\n         return `+(55) ${str.slice(0,2)} ${str.slice(2,3)} ${str.slice(3,7)}-${str.slice(7,11)}`;\n      }\n      // 92 8841-0440\n      return `+(55) ${str.slice(0,2)} ${str.slice(2,6)}-${str.slice(6,10)}`\n   }\n   return '';\n}","import React from 'react';\nimport { makeStyles } from '@mui/styles';\nimport { Theme } from '@mui/material/styles';\nimport { Box, Grid, List, ListItemButton, Typography, } from '@mui/material';\nimport logotipo from \"@assets/creditoja-logotipo.jpg\"\nimport { TouchApp } from '@mui/icons-material';\nimport FormikSendEmail from '@components/formik';\ninterface Props {\n    children?: React.ReactNode;\n}\n\nconst Home: React.FC<Props> = ({ children, ...props }) => {\n     const classes = useStyles();\n    return (\n        <Grid container justifyContent={\"center\"} sx={{border: \"0px solid blue\", padding:0.5}} gap={1}>\n{/* +++++++++++ Header +++++++++++ */}\n            <Grid item xs={12} lg={10}  sx={{border: \"0px solid blue\", padding:0.5}} >\n                <Grid container justifyContent={\"space-between\"} sx={{border: \"0px solid blue\", padding:1}}>\n                    <Grid item xs={2}>\n{/* --------------------------- Logotipo --------------------------- */}\n                        <Box sx={{border: \"0px solid purple\", width: 200, height: \"auto\", }}  >\n                            <img src={logotipo} alt=\"logotipo\" width={\"100%\"} height={\"auto\"} />\n                        </Box>\n                    </Grid>\n                    <Grid item xs={6} sx={{display: \"flex\", justifyContent: \"end\", alignItems: \"center\"}} >\n{/* --------------------------- Menu  --------------------------- */}\n                        <List \n                            component={\"nav\"}\n                            sx={{display: \"inline-flex\", gap: 1.5,fontWeight:600, fontSize: \"1rem\"}}\n                        >\n                            <ListItemButton sx={{p:1}} href={\"https://creditoja.net/index.html\"} >Home</ListItemButton>\n                            <ListItemButton sx={{p:1}} href={\"https://creditoja.net/page1.html\"} >Serviços</ListItemButton>\n                            <ListItemButton sx={{p:1,mr:0.5}} href={\"https://creditoja.net/page2.html\"} >Sobre Nós</ListItemButton>\n                            <ListItemButton \n                                sx={{\n                                    p:1, pl:3, paddingRight:3, \n                                    border: \"0px solid red\", borderRadius: 10, \n                                    backgroundColor: \"#149dcc\", color: \"#fff\", \"&:hover\": {backgroundColor: '#000', color: '#149dcc'}\n                                }} \n                                href={\"#\"} >\n                                <TouchApp \n                                    className={classes.touchApp}\n                                    sx={{ \n                                        fontSize: 30, marginRight: 1, \n                                    }} \n                             />SIMULE AGORA\n                            </ListItemButton>\n\n                        </List>\n                    </Grid>\n\n                </Grid>\n            </Grid>\n\n{/* +++++++++++ Body +++++++++++ */}\n            <Grid item xs={12} lg={10} sx={{border: \"0px solid red\"}}>\n                <Grid container justifyContent={\"center\"} sx={{textAlign: \"center\"}} gap={2}>\n                    <Grid item xs={8} sx={{margin: 5,border: \"0px solid red\"}}>\n                        <Typography variant={\"h1\"} sx={{fontWeight: 400, fontSize: \"2.8rem\"}} >  Faça agora uma simulação </Typography>\n                        <Typography variant={\"h6\"} sx={{fontWeight: 700, fontSize: \"1rem\", marginTop: 2}} >  Preencha os dados abaixo. </Typography>\n                        \n                    </Grid>\n                    <Grid item xs={8}>\n{/* --------------------------- Modulo de Formulario  --------------------------- */}\n                        <FormikSendEmail></FormikSendEmail>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </Grid>\n    )\n}\n\nexport default Home;\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    container: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    touchApp : {\n        animation: \"$pulse 1.5s infinite\",\n        borderRadius: \"10px\",\n    },\n    \"@keyframes pulse\": {\n        \"0%\": {\n            transform: \"scale(1)\",\n            boxShadow: \"0 0 0 0 rgba(20, 157, 204, 0.7)\",\n          },\n          \"70%\" : {\n            transform: \"scale(1.2)\",\n            boxShadow: \"0 0 0 20px rgba(20, 157, 204, 0)\"\n          },\n          \"100%\" : {\n            transform: \"scale(1)\",\n            boxShadow: \"0 0 0 0 rgba(20, 157, 204, 0)\"\n          }\n    }\n  }));\n","import React from 'react';\n\ninterface Props {\n    children?: React.ReactNode;\n}\n\nconst Services: React.FC<Props> = ({ children, ...props }) => {\n    return (\n        <>\n            <h1>Este bloco representa o componente <b style={{color:\"#f00\"}} >Services</b></h1>\n        </>\n    )\n}\n\nexport default Services;","\nimport React from \"react\";\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\n\nimport ROUTES from \"@config/routes\";\nimport About from \"@pages/about\";\nimport Contact from \"@pages/contact\";\nimport Home from \"@pages/home\";\nimport Services from \"@pages/services\";\n\nconst Routes: React.FC = ({ ...props}) => {\n    return(\n        <BrowserRouter> \n            <Switch>\n                <Route exact path={ROUTES.HOME} component={Home}/>\n                <Route path={ROUTES.ABOUT} component={About} />\n                <Route path={ROUTES.SERVICES} component={Services} />\n                <Route path={ROUTES.CONTACT} component={Contact} />\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default Routes;\n\n","import { TypeBackground } from \"@mui/material\";\nimport { TypeText, createTheme } from '@mui/material/styles';\n\nexport interface CustomTypeBackground extends TypeBackground {\n  default: string;\n  primary: string;\n  secondary?: string;\n  backgroundCustom?: string;\n}\n\nexport interface customTypographyOptions extends Partial<TypeText> {\n  default: string;\n  selected?: string;\n  primary?: string;\n  secondary?: string;\n}\n\ndeclare module '@mui/material/styles' {\n  interface Palette { // Serve para conseguirmos acessar o atributo personalizado - Ex: theme.palette.backgroundColor?.primary\n    backgroundColor: CustomTypeBackground;\n    textColor?: customTypographyOptions;\n  }\n  interface PaletteOptions { // Serve para a variavel Theme Suporte atributos personalizado no body\n    backgroundColor?: CustomTypeBackground;\n    textColor?: customTypographyOptions;\n  }\n}\n\nconst Theme = createTheme({\n    spacing: 10,\n    typography: {\n      fontFamily: [ 'Poppins', 'Montserrat' ,'sans-serif'].join(','),\n      fontSize: 10,\n      subtitle1:{\n        color: \"#FFDB70\",\n      }\n    },\n    palette: {\n      primary: {\n        main: \"#000\", \n        contrastText: \"#000\",\n        light: \"#272B2D\",\n      },\n      secondary: {\n        main: \"#03a9f4\", \n        contrastText: \"#fff\",\n        light: \"#FFB800\",\n      },\n      error: {\n        main: \"#F97A91\",\n      },\n      success: {\n        main: \"#5AC45F\",\n      },\n      text: {\n        primary: \"#000\",\n        secondary: 'rgba(132, 146, 166, 1)',\n        disabled: 'rgba(60, 72, 88, 0.38)',\n      },\n      textColor: {\n        default: \"#e8e6e3\",\n        selected: \"#FFDB70\",\n      },\n      background: {\n        default: \"#fff\",\n        paper: \"#17191A\",\n      },\n      backgroundColor: {\n        default: \"#0E0F0F\",\n        primary: \"#17191A\",\n        secondary: \"#26292B\",\n        backgroundCustom: '#000',\n        paper: \"#000\",\n      },\n    },\n  \n  });\n\n  export default Theme;","import React from 'react';\n// import './App.css';\n\nimport { CssBaseline, IconButton } from '@mui/material';\nimport { ThemeProvider  } from '@mui/material/styles';\nimport { ThemeProvider as ThemeProviderLegacy } from \"@mui/styles\";\nimport { ProviderContext, SnackbarProvider } from \"notistack\";\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport Routes from './components/routes';\nimport Theme from './theme';\n\nconst App: React.FC = () => {\n\n  const notistackRef = React.useRef<ProviderContext>();\n  const onClickDismiss = (key: string | number) => () => {\n    notistackRef &&\n      notistackRef.current &&\n      notistackRef.current.closeSnackbar(key);\n  };\n  return(\n    <ThemeProvider theme={Theme}>\n      <ThemeProviderLegacy theme={Theme}>\n        <SnackbarProvider\n              autoHideDuration={5000}\n              maxSnack={3}\n              preventDuplicate\n              //@ts-ignore\n              ref={notistackRef}\n              action={(key) => (\n                <IconButton size=\"small\" onClick={onClickDismiss(key)}>\n                  <CloseIcon htmlColor=\"#fff\" />\n                </IconButton>\n              )}\n        >\n        <CssBaseline/> \n          App running...\n        <Routes></Routes>\n        </SnackbarProvider>\n      </ThemeProviderLegacy>\n    </ThemeProvider>\n  )\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import logo from './logo.svg';\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.tsx</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}